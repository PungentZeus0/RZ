% A0 = badge ID, returns boolean on V0
% Does follow calling convention, deal with it.
#new:Function $IsBadgeEquipped
{
PUSH	S1, S2, S3
.Init
LIO		S2, 8010F498	% position in list
ADDIU	S3, S2, 78		% end of list
.Loop
LH		S1, 0 (S2)
BEQL	A0, S1, .End
ADDIU	A0, R0, 1 % return true
BNE		S2, S3, .Loop
ADDIU	S2, S2, 2
ADDIU	A0, R0, 0 % return false
.End
ADDU    v0, a0, r0 %move result to v0 to follow calling convention
POP		S1, S2, S3
JR		RA
NOP
}

% A0 = posX
% A1 = posY
% A2 = sizeX
% A3 = sizeY
% T0 = style
% T1 = opacity

#new:Function $DrawMenuBox
{
    ADDIU        SP, SP, -58
    SW        RA, 50 (SP)
    % setup call to DrawBox
    SW        R0, 10 (SP)    % posZ
    SW        A2, 14 (SP)    % width
    SW        A3, 18 (SP) % height
    SW        T1, 1C (SP) % opacity
    COPY        A2, A0 % posX
    COPY        A3, A1 % posY
    COPY        A1, T0 % flags
    CLEAR        A0 % flags
    SW        R0, 20 (SP) % fogRGB
    SW        R0, 24 (SP) % scaleX (unused)
    SW        R0, 28 (SP) % scaleY (unused)
    SW        R0, 2C (SP) % rotX (unused)
    SW        R0, 30 (SP) % rotY (unused)
    SW        R0, 34 (SP) % rotZ (unused)
    SW        R0, 38 (SP) % unk func
    SW        R0, 3C (SP) % unk func arg0
    SW        R0, 40 (SP) % txMtx (unused)
    SW        R0, 44 (SP) % txShiftY (unused)
    SW        R0, 48 (SP) % txShiftX (unused)
    JAL       800F52E0 %draw_box
    SW        R0, 4C (SP) % unk
    LW        RA, 50 (SP)
    JR        RA
    ADDIU     SP, SP, 58
}

#export $IsBadgeEquipped
#export $DrawMenuBox